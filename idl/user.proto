syntax = "proto3";

package user;

option go_package = "tiktok/user";

service tiktokUserService {
  rpc Login(UserLoginRequest)returns(UserLoginResponse);
  rpc Register(UserRegisterRequest)returns(UserRegisterResponse);
  rpc Info(UserRequest)returns(UserResponse);
  rpc GetToken(GetTokenRequest) returns (GetTokenResponse){};
  rpc CheckToken(CheckTokenRequest) returns (CheckTokenResponse){};
}

// 返回
message BaseResp {
  int64 code = 1; // 状态码
  string msg = 2; // 返回状态描述
}

// 用户注册请求
message UserRegisterRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

// 用户注册响应
message UserRegisterResponse {
  BaseResp base = 1;  // 返回状态
  int64 user_id = 2;  // 用户id
  string token = 3;   // 用户鉴权token
}

// 用户登录请求
message UserLoginRequest {
  string username = 1; // 登录用户名
  string password = 2; // 登录密码
}

// 用户登录响应
message UserLoginResponse {
  BaseResp base = 1; // 返回状态
  int64 user_id = 2; // 用户id
  string token = 3; // 用户鉴权token
}

// 用户信息请求
message UserRequest {
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}

// 用户信息响应
message UserResponse {
  BaseResp base = 1; // 返回状态
  User user = 2; // 用户信息
}

// 用户信息
message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
}

// 获取token请求
message GetTokenRequest {
  int64 user_id = 1;// 用户id
  string username = 2;// 用户名称
}

// 获取token响应
message GetTokenResponse {
  BaseResp base = 1; // 返回状态
  string token = 2;// 用户鉴权token
}

// 检查token请求
message CheckTokenRequest {
  string token = 1;// 用户鉴权token
}

// 检查token响应
message CheckTokenResponse {
  BaseResp base = 1; // 返回状态
  Auth info = 2;// 鉴权对象
}

// 鉴权对象
message Auth {
  int64 user_id = 1;// 用户id
  string username = 2;// 用户名称
  int64 not_before = 3;// token生效时间
  int64 expires_at = 4;// token失效时间
}