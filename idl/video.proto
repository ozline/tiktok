syntax = "proto3";

option go_package = "video";

package video;

message BaseResp {
    int64 code = 1;
    string msg = 2;
}

message User{
    int64 id = 1;
    string name = 2;
    int64 follow_count = 3;
    int64 follower_count = 4;
    bool is_follow = 5;
    string avatar = 6;
    string background_image = 7;
    string signature = 8;
    int64 total_favorited = 9;
    int64 work_count = 10;
    int64 favorite_count = 11;

}

message Video{
    int64 id = 1;
    User author = 2;
    string play_url = 3;
    string cover_url = 4;
    int64 favorite_count = 5;
    int64 comment_count = 6;
    bool is_favorite = 7;
    string title = 8;
}

message FeedRequest{
    int64 latest_time = 1;
    string token = 2;
}

message FeedResponse{
    BaseResp base = 1;
    int64 next_time = 2;
    repeated Video video_list = 3;
}

message PutVideoRequest{
    bytes video_block = 1; //分块的视频文件
    bytes cover = 2;       //封面文件
    int64 user_id = 3;     //用户ID
    int64 block_id = 4;    //分块的id
    bool isFinished =5;    //发送给服务端判断视频是否传输完成，
    string title = 6;      //视频标题
    string token = 7;      //token
}

message PutVideoResponse{
    BaseResp base = 1;
    int64 state = 2;        //0 表示接收失败 1表示接收成功但未完成，2表示全部接收完成
}

message GetFavoriteVideoInfoRequest{
    repeated int64 video_id = 1;  //需要获取的video_id
    string token = 2;             //token
}

message GetFavoriteVideoInfoResponse{
    BaseResp base = 1;
    repeated Video video_list = 2; //获取的video信息
}

message GetPublishListRequest{
    string token = 1;
    int64 user_id = 2 ;
}

message GetPublishListResponse{
    BaseResp base = 1;
    repeated Video video_list = 2 ;
}

message GetWorkCountRequest{
    string token = 1;
    int64 user_id = 2 ;
}

message GetWorkCountResponse{
    BaseResp base = 1;
    int64 work_count = 2; // 作品数量
}
service VideoService {
    rpc Feed(FeedRequest) returns (FeedResponse){};
    rpc PutVideo(stream PutVideoRequest) returns (stream PutVideoResponse){};
    rpc GetFavoriteVideoInfo(GetFavoriteVideoInfoRequest)returns (GetFavoriteVideoInfoResponse){};
    rpc GetPublishList(GetPublishListRequest)returns (GetPublishListResponse){};
    rpc GetWorkCount(GetWorkCountRequest)returns (GetWorkCountResponse){};
}